services:
  traefik:
    image: "traefik:v2.3"
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    depends_on:
      - influxeed-engine
    ports:
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  influxeed-engine:
    image: ${influxeed-engine_IMAGE:-influxeed-engine/influxeed-engine:latest}
    container_name: influxeed-engine
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    environment:
      - DATABASE_URL=postgres://influxeed-engine:secret@db/influxeed-engine?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=test123
      - BASE_URL=https://influxeed-engine.example.org
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxeed-engine.rule=Host(`influxeed-engine.example.org`)"
      - "traefik.http.routers.influxeed-engine.entrypoints=websecure"
      - "traefik.http.routers.influxeed-engine.tls.certresolver=myresolver"
  db:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=influxeed-engine
      - POSTGRES_PASSWORD=secret
    volumes:
      - influxeed-engine-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "influxeed-engine"]
      interval: 10s
      start_period: 30s
volumes:
  influxeed-engine-db:
